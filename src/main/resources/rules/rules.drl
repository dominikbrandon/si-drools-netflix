package si.netflix;

import javax.swing.*;
import org.kie.api.runtime.*;

// *************** GLOBALS **********************
global JFrame frame;

// ************ TYPES DECLARATIONS ***************
declare enum Question
    DRAMA_COMEDY("Drama or Comedy", new String[]{"Drama", "Comedy", "A little bit of both"}),
    SCI_FI("Do you like sci-fi or supernatural shows", new String[]{"Yes", "No"}),
    QUEST_MORALS("Do you like your character have questionable morals", new String[]{"No", "Yes"}),
    SMALL_PRISON("Small town or prison", new String[]{"Small Town", "Prison"}),
    STRONG_FEMALE("Do you like strong female charaters", new String[]{"Yes", "No"}),
    POLITICS("Politics", new String[]{"Yes", "No"}),
    CAN_GORE("Can you handle gore?",new String[]{"Yes", "No"}),
    FRIEND_DYSF("Friend group or dysfunctional family",new String[]{"Friends", "Family"}),
    BRITISH_CHAR("British charakters?", new String[]{"No", "Yes"}),
    FEEL_CRY("Feel like crying?", new String[]{"Yes", "No"}),
    SELL_DRUGS("Do you like them to sell drugs?",new String[]{"Yes","No"}),
    NEED_ACTION("Need action?", new String[]{"Yes", "No"}),
    WORK_HUMOR("Work place humor?", new String[]{"No", "Yes"}),
    FOOTBALL("Do you like football?", new String[]{"Yes", "No"}),
    ROMANCE("Scandalous romance?", new String[]{"Yes", "No"}),
    CRIME_SHOWS("Do you like crime shows?", new String[]{"Yes", "No"}),
    HIGH_SCHOOL("Want to see James Franco & Seth Rogen as high schoolers?", new String[]{"No", "Yes"}),
    ZOMBIES("Do you like zombies?", new String[]{"Yes", "No"}),
    HOSPITALS("Hospitals?", new String[]{"No", "Yes"}),
    TINA_AMY("Tina Fey or Amy Poehler?", new String[]{"Tina", "Amy"}),
    ROOT_CRIMINAL("Do you root for the criminals?", new String[]{"Yes", "No"}),
    METH("Meth?", new String[]{"Yes", "No"}),
    OPTI_CYNIC("Optimistic or cynical?", new String[]{"Optimistic", "Cynical"}),
    VAMP("Vampires?", new String[]{"Yes", "No"}),
    BAR_CAFE("Do you want your NYC friends to hang out at a Bar or Cafe?", new String[]{"Bar", "Cafe"}),
    FOREN_PSYC("Forensics or psychology?", new String[]{"Forensics", "Psychology"});

    text : String
    options : String[]
end

declare Answer
    question : Question @key
    choice : String
end

// ********************** FUNCTIONS *********************
function void ask(JFrame frame, KieRuntime krt, Question question) {
    String[] options = question.getOptions();
    int answerVal = JOptionPane.showOptionDialog(frame, question.getText(), "", JOptionPane.YES_NO_CANCEL_OPTION,
            JOptionPane.QUESTION_MESSAGE, null, options, 1);
    Answer answer = new Answer(question);
    answer.setChoice(options[answerVal]);
    krt.insert(answer);
}

function void showResult(JFrame frame, String movieName) {
    JOptionPane.showMessageDialog(frame, movieName);
}

// *********************** RULES ***********************
rule "init"
then
    ask(frame, kcontext.getKieRuntime(), Question.DRAMA_COMEDY);
end

rule "drama comedy - drama"
when
    Answer(question == Question.DRAMA_COMEDY, choice == Question.DRAMA_COMEDY.getOptions()[0])
then
   ask(frame, kcontext.getKieRuntime(), Question.SCI_FI);
end

rule "drama comedy - comedy"
when
    Answer(question == Question.DRAMA_COMEDY, choice == Question.DRAMA_COMEDY.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.QUEST_MORALS);
end

rule "drama comedy - both"
when
    Answer(question == Question.DRAMA_COMEDY, choice == Question.DRAMA_COMEDY.getOptions()[2])
then
    ask(frame, kcontext.getKieRuntime(), Question.SMALL_PRISON);
end

rule "sci fi - yes"
when
    Answer(question == Question.SCI_FI, choice == Question.SCI_FI.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.CAN_GORE);
end

rule "sci fi - no"
when
    Answer(question == Question.SCI_FI, choice == Question.SCI_FI.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.POLITICS);
end

rule "small prison - small"
when
    Answer(question == Question.SMALL_PRISON, choice == Question.SMALL_PRISON.getOptions()[0])
then
    showResult(frame, "Gilmore Girls");
end

rule "small prison - prison"
when
    Answer(question == Question.SMALL_PRISON, choice == Question.SMALL_PRISON.getOptions()[1])
then
    showResult(frame, "OITNB");
end

rule "questionable morals - no"
when
    Answer(question == Question.QUEST_MORALS, choice == Question.QUEST_MORALS.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.STRONG_FEMALE);
end

rule "questionable morals - yes"
when
    Answer(question == Question.QUEST_MORALS, choice == Question.QUEST_MORALS.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.FRIEND_DYSF);
end

rule "friend or dysfunctional - friend"
when
    Answer(question == Question.FRIEND_DYSF, choice == Question.FRIEND_DYSF.getOptions()[0])
then
    showResult(frame, "It's always sunny in philadelphia");
end

rule "friend or dysfunctional - dysfunctional"
when
    Answer(question == Question.FRIEND_DYSF, choice == Question.FRIEND_DYSF.getOptions()[1])
then
    showResult(frame, "Arrested development");
end

rule "strong female - yes"
when
    Answer(question == Question.STRONG_FEMALE, choice == Question.STRONG_FEMALE.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.SELL_DRUGS);
end

rule "strong female - no"
when
    Answer(question == Question.STRONG_FEMALE, choice == Question.STRONG_FEMALE.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.WORK_HUMOR);
end

rule "can gore - yes"
when
    Answer(question == Question.CAN_GORE, choice == Question.CAN_GORE.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.ZOMBIES);
end

rule "can gore - no"
when
    Answer(question == Question.CAN_GORE, choice == Question.CAN_GORE.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.BRITISH_CHAR);
end

rule "politics - yes"
when
    Answer(question == Question.POLITICS, choice == Question.POLITICS.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.NEED_ACTION);
end

rule "politics - no"
when
    Answer(question == Question.POLITICS, choice == Question.POLITICS.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.FEEL_CRY);
end

rule "feel crying - yes"
when
    Answer(question == Question.FEEL_CRY, choice == Question.FEEL_CRY.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.FOOTBALL);
end

rule "feel crying - no"
when
    Answer(question == Question.FEEL_CRY, choice == Question.FEEL_CRY.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.CRIME_SHOWS);
end

rule "sell drugs - yes"
when
    Answer(question == Question.SELL_DRUGS, choice == Question.SELL_DRUGS.getOptions()[0])
then
    showResult(frame, "Weeds");
end

rule "sell drugs - no"
when
    Answer(question == Question.SELL_DRUGS, choice == Question.SELL_DRUGS.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.TINA_AMY);
end

rule "british character - no"
when
    Answer(question == Question.BRITISH_CHAR, choice == Question.BRITISH_CHAR.getOptions()[0])
then
    showResult(frame, "Lost");
end

rule "british character - yes"
when
    Answer(question == Question.BRITISH_CHAR, choice == Question.BRITISH_CHAR.getOptions()[1])
then
    showResult(frame, "Dr. Who");
end

rule "need action - yes"
when
    Answer(question == Question.NEED_ACTION, choice == Question.NEED_ACTION.getOptions()[0])
then
    showResult(frame, "24");
end

rule "need action - no"
when
    Answer(question == Question.NEED_ACTION, choice == Question.NEED_ACTION.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.ROMANCE);
end

rule "work place humor - no"
when
    Answer(question == Question.WORK_HUMOR, choice == Question.WORK_HUMOR.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.HIGH_SCHOOL);
end

rule "work place humor - yes"
when
    Answer(question == Question.WORK_HUMOR, choice == Question.WORK_HUMOR.getOptions()[1])
then
    showResult(frame, "The Office");
end

rule "football - yes"
when
    Answer(question == Question.FOOTBALL, choice == Question.FOOTBALL.getOptions()[0])
then
    showResult(frame, "Friday night lights");
end

rule "football - no"
when
    Answer(question == Question.FOOTBALL, choice == Question.FOOTBALL.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.HOSPITALS);
end

rule "crime shows - yes"
when
    Answer(question == Question.CRIME_SHOWS, choice == Question.CRIME_SHOWS.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.ROOT_CRIMINAL);
end

rule "crime shows - no"
when
    Answer(question == Question.CRIME_SHOWS, choice == Question.CRIME_SHOWS.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.METH);
end

rule "tina amy - tina"
when
    Answer(question == Question.TINA_AMY, choice == Question.TINA_AMY.getOptions()[0])
then
    showResult(frame, "30 Rock");
end

rule "tina amy - amy"
when
    Answer(question == Question.TINA_AMY, choice == Question.TINA_AMY.getOptions()[1])
then
    showResult(frame, "Parks & Recreation");
end

rule "high scoolers - no"
when
    Answer(question == Question.HIGH_SCHOOL, choice == Question.HIGH_SCHOOL.getOptions()[0])
then
    ask(frame, kcontext.getKieRuntime(), Question.BAR_CAFE);
end

rule "high scoolers - yes"
when
    Answer(question == Question.HIGH_SCHOOL, choice == Question.HIGH_SCHOOL.getOptions()[1])
then
    showResult(frame, "Freaks & Geeks");
end

rule "meth - yes"
when
    Answer(question == Question.METH, choice == Question.METH.getOptions()[0])
then
    showResult(frame, "Breaking Bad");
end

rule "meth - no"
when
    Answer(question == Question.METH, choice == Question.METH.getOptions()[1])
then
    showResult(frame, "Mad Men");
end

rule "root criminals - yes"
when
    Answer(question == Question.ROOT_CRIMINAL, choice == Question.ROOT_CRIMINAL.getOptions()[0])
then
    showResult(frame, "Dexter");
end

rule "root criminals - no"
when
    Answer(question == Question.ROOT_CRIMINAL, choice == Question.ROOT_CRIMINAL.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.FOREN_PSYC);
end

rule "hospitals - no"
when
    Answer(question == Question.HOSPITALS, choice == Question.HOSPITALS.getOptions()[0])
then
    showResult(frame, "Parenthood");
end

rule "hospitals - yes"
when
    Answer(question == Question.HOSPITALS, choice == Question.HOSPITALS.getOptions()[1])
then
    showResult(frame, "Grey's anathomy");
end

rule "zombies - yes"
when
    Answer(question == Question.ZOMBIES, choice == Question.ZOMBIES.getOptions()[0])
then
    showResult(frame, "The Walking Dead");
end

rule "zombies - no"
when
    Answer(question == Question.ZOMBIES, choice == Question.ZOMBIES.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.VAMP);
end

rule "romance - yes"
when
    Answer(question == Question.ROMANCE, choice == Question.ROMANCE.getOptions()[0])
then
    showResult(frame, "Scandal");
end

rule "romance - no"
when
    Answer(question == Question.ROMANCE, choice == Question.ROMANCE.getOptions()[1])
then
    ask(frame, kcontext.getKieRuntime(), Question.OPTI_CYNIC);
end

rule "opti cynic - opti"
when
    Answer(question == Question.OPTI_CYNIC, choice == Question.OPTI_CYNIC.getOptions()[0])
then
    showResult(frame, "The west wing");
end

rule "opti cynic - cynic"
when
    Answer(question == Question.OPTI_CYNIC, choice == Question.OPTI_CYNIC.getOptions()[1])
then
    showResult(frame, "House of Cards");
end

rule "vampires - yes"
when
    Answer(question == Question.VAMP, choice == Question.VAMP.getOptions()[0])
then
    showResult(frame, "The vampire diaries");
end

rule "vampires - no"
when
    Answer(question == Question.VAMP, choice == Question.VAMP.getOptions()[1])
then
    showResult(frame, "Supernatural");
end

rule "foren psyc - foren"
when
    Answer(question == Question.FOREN_PSYC, choice == Question.FOREN_PSYC.getOptions()[0])
then
    showResult(frame, "CSI Miami");
end

rule "foren psyc - psyc"
when
    Answer(question == Question.FOREN_PSYC, choice == Question.FOREN_PSYC.getOptions()[1])
then
    showResult(frame, "Criminal Minds");
end

rule "bar cafe - bar"
when
    Answer(question == Question.BAR_CAFE, choice == Question.BAR_CAFE.getOptions()[0])
then
    showResult(frame, "How i met your mother");
end

rule "bar cafe - cafe"
when
    Answer(question == Question.BAR_CAFE, choice == Question.BAR_CAFE.getOptions()[1])
then
    showResult(frame, "Friends");
end